<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/qatv/**" location="/qatv/" />
	
	<!-- Excel view	 -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
	   <beans:property name="location">
	       <beans:value>/WEB-INF/spring//spring-excel-views.xml</beans:value>
	   </beans:property>
	   <beans:property name="order" value="0" />
	</beans:bean> -->
	<beans:bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" >
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- Apache Tiles -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/layouts/layouts.xml</beans:value>
				<beans:value>/WEB-INF/layouts/views.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	 <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes(-1) -->
        <beans:property name="maxUploadSize" value="300000000"/>
        <beans:property name="resolveLazily" value="true"/>
    </beans:bean>
    <beans:bean id="jsonView" class="com.ndquangr.qatv.view.JSONView" />
	
	<context:component-scan base-package="com.ndquangr.qatv" />	
	
	
	<!-- MyBatis(SqlSessionFactoryBean)	 -->
    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:qualifier value="defaultDS"/>
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="mapperLocations" value="classpath:com/ndquangr/qatv/module/**/*.xml"/>
    </beans:bean>

    <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <beans:constructor-arg index="0" ref="sqlSessionFactory"/>
    </beans:bean>

    <!-- mybatis Mapper interface와 xml을 검색하여 매핑 -->
    <beans:bean id="scanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="basePackage" value="com.ndquangr.qatv"/>
        <beans:property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </beans:bean>
	
	<!-- For multi language -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:messages" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>

	<beans:bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<beans:property name="paramName" value="lang" />
	</beans:bean>

	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<beans:property name="defaultLocale" value="en" />
<!-- 		<beans:property name="cookieName" value="myAppLocaleCookie"></beans:property> -->
<!--         <beans:property name="cookieMaxAge" value="3600"></beans:property> -->
	</beans:bean>
	
	<interceptors>
        <beans:ref bean="localeChangeInterceptor"/>
	</interceptors>
	
	<!-- Context -->
	<!-- <default-servlet-handler default-servlet-name="WorkerServlet"/> -->
	<!-- <mvc:view-controller path="/" view-name="redirect:/main/main"/> -->
	<view-controller path="/noAuthorized" view-name="view/noAuthorized"/>
    <view-controller path="/403" view-name="view/error"/>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
	<tx:annotation-driven proxy-target-class="true"/> 
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>		
	</beans:bean>
</beans:beans>
